name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.get_tag.outputs.tag_name }}
    steps:
      - name: Get tag name
        id: get_tag
        run: echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_tag.outputs.tag_name }}
          name: Release ${{ steps.get_tag.outputs.tag_name }}
          draft: false
          prerelease: false
          generate_release_notes: true

  build-and-upload:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-13  # Use Intel runner for x86_64
          - target: aarch64-apple-darwin
            os: macos-latest  # Use ARM runner for aarch64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create archive
        run: |
          mkdir -p dist
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp target/${{ matrix.target }}/release/scan.exe scan.exe
            7z a dist/scan-${{ needs.create-release.outputs.tag_name }}-${{ matrix.target }}.zip scan.exe
          else
            cp target/${{ matrix.target }}/release/scan scan
            tar czf dist/scan-${{ needs.create-release.outputs.tag_name }}-${{ matrix.target }}.tar.gz scan
          fi

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.create-release.outputs.tag_name }}
          files: |
            dist/scan-${{ needs.create-release.outputs.tag_name }}-${{ matrix.target }}.tar.gz
            dist/scan-${{ needs.create-release.outputs.tag_name }}-${{ matrix.target }}.zip 